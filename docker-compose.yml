version: '3.8'

services:
  # PostgreSQL Database
  database:
    image: postgres:15-alpine
    container_name: fabrikator-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: fabrikator_db
      POSTGRES_USER: fabrikator_user
      POSTGRES_PASSWORD: fabrikator_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fabrikator_user -d fabrikator_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    container_name: fabrikator-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3001
      DATABASE_URL: postgresql://fabrikator_user:fabrikator_password@database:5432/fabrikator_db?sslmode=disable
      OPENAI_API_KEY: ${OPENAI_API_KEY}
    ports:
      - "3001:3001"
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - ./backend/logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Service
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
      args:
        REACT_APP_API_URL: http://localhost:3001/api
    container_name: fabrikator-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Database Migration Service (runs once)
  migrate:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: builder
    container_name: fabrikator-migrate
    environment:
      DATABASE_URL: postgresql://fabrikator_user:fabrikator_password@database:5432/fabrikator_db?sslmode=disable
    depends_on:
      database:
        condition: service_healthy
    command: >
      sh -c "
        echo 'Waiting for database to be ready...' &&
        sleep 10 &&
        echo 'Running database migrations...' &&
        npx prisma migrate deploy &&
        echo 'Database migrations completed!'
      "
    restart: "no"

volumes:
  postgres_data:
    name: fabrikator-postgres-data 